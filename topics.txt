* Introdução a linguagem;
* História da linguagem;
* Larry Wall;
* Quem usa Perl?;
* Cultura Perl;
* Comunidade / ES;
* Plataformas suportadas pelo Perl;

* Perl no Windows;
    * Instalação;
    * ?
* Perl e os unixes-like;
* Documentação (Perldoc);
    * Livros;
    * Terminal;
    * Sites;


(10)
* Estruturas:
    * Scalares;
    * Arrays;
    * Hashes;
    * Estruturas Complexas;




(11)
* Variáveis especiais;

(12)
* Estruturas de repetição, condições e operadores;

(13)
* Tratamento de arquivos;

(14)
* Expressões Regulares;

(15)
* Módulos;
    * CPAN;

* Boas práticas:
    * Agile;
    * TDD;
    * Integração contínua;
    * DRY;
    * Testes de Aceiação;
    * Testes de Integração;

* Orientação a Objetos com Moose;

* Perl para Web;

* O Passado com os CGIs;

* Introdução Catalyst;
    * Template Toolkit 2;
    * DBIx::Class;

Encaixar exercícios práticos
Fazer um Dojô com os alunos?

    Todos os alunos devem resolver o código em dupla, e a cada 5 minutos, eu
    troco o piloto com o co-piloto. Quando uma dupla finalizar o exercício,
    ela pode, se for covidada, ajudar outras duplas.

    Porem, como seria a parte de testes nestes casos? Seria possível ensinar
    oa alunos a programar já fazendo o uso de testes?

#############################################################################

TODO:
    - Incluir os quadrinhos do XKCD falando sobre Perl;
    - Débito Técnico, comentar um pouco sobre assunto, com o intuito de
      enfatizar ao aluno a importância de ter boas práticas;
